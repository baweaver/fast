#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift(File.expand_path('../lib', __dir__))

require 'fast'
require 'coderay'

arguments = ARGV
pattern = arguments.shift
show_sexp = arguments.delete('--ast')
pry = arguments.delete('--pry')
debug = arguments.delete('--debug') || arguments.delete('-d')
files = Fast.ruby_files_from(*arguments || '.')

pattern = Fast.expression(pattern)

puts "Expression: #{pattern.map(&:to_s)}" if debug

files.each do |file|
  results =
    if debug
      Fast.debug { Fast.search_file(pattern, file) }
    else
      begin
        Fast.search_file(pattern, file)
      rescue Parser::SyntaxError
        puts "Ops! An error occurred trying to search in #{pattern.inspect} in #{file}", $ERROR_INFO, $ERROR_POSITION
      end
    end

  next unless results

  results.each do |node|
    next if result.nil? || result == []
    if pry
      require 'pry'
      binding.pry # rubocop:disable Lint/Debugger
    else
      Fast.report(node, file: file, show_sexp: show_sexp)
    end
  end
end
